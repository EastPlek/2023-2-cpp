

=============================================
 Upload Time : 12/06/23 Wednesday 16:56:03
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 12월 4일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (14주 2일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// C++ 템플릿
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"

template <class T, int NUM>
class Array {
	T a[NUM]{};
public:

	T operator[](int idx) const {
		if (0 <= idx && idx < NUM)
			return a[idx];
		std::cout << "배열 범위 위반, 유효범위 " << 0 << " - " << NUM - 1;
		return 0;
	}

	const int size() const { return NUM; }

};

		// 전역 생성하면 

// [문제] main()을 수정하지 않고 의도대로 실행되게 하자
int main(void)
{
	Array<int, 10> a;     // int 10개가 들어갈 배열을 만든다.
	                      // a의 값은 모두 0으로 초기화한다.

	std::cout << sizeof(a) << std::endl;
	for (int i = 0; i < a.size(); ++i) {
		std::cout << a[i] << ' ';
	}
	std::cout << '\n';

	a[10];                // 화면 출력 - 배열 범위 위반, 유효범위 0 - 9
	save("33.cpp", "FileOutput\\2023_12_06 CPP 33-output", std::ios::app, true);
}

=============================================
 Upload Time : 12/06/23 Wednesday 17:01:50
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 12월 4일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (14주 2일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// C++ 템플릿
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include <array>
#include "save.h"

template <class T, int NUM>
class Array {
	T a[NUM]{};
public:

	T operator[](int idx) const {
		if (0 <= idx && idx < NUM)
			return a[idx];
		std::cout << "배열 범위 위반, 유효범위 " << 0 << " - " << NUM - 1;
		return 0;
	}

	const int size() const { return NUM; }

};

int main(void)
{
	std::array<int, 10> a;

	a.fill(333);
	std::cout << "a가 차지하는 메모리 - " << sizeof(a) << '\n';

	std::cout << "a가 갖고 있는 원소 수 - " << a.size() << '\n';

	for(int n : a)
		std::cout << n << ' ';
	std::cout << '\n';
	save("33.cpp", "FileOutput\\2023_12_06 CPP 33-output", std::ios::app, true);
}

=============================================
 Upload Time : 12/06/23 Wednesday 17:04:00
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 12월 4일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (14주 2일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// C++ 템플릿
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include <array>
#include "save.h"

class Dog {
public:
	Dog() { std::cout << "Dog 생성" << '\n'; }
	~Dog() { std::cout << "Dog 소멸" << '\n'; }
};

int main(void)
{
	Dog *p = new Dog;

	delete p;
	save("33.cpp", "FileOutput\\2023_12_06 CPP 33-output", std::ios::app, true);
}

=============================================
 Upload Time : 12/06/23 Wednesday 17:19:38
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 12월 4일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (14주 2일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// C++ 템플릿
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

// T[] - 사용하지 말자  --> array<T,N>
// T* - 사용하지 말자   --> unique_ptr<T>
// 메모리 비용이 동일
// 풍부한 멤버함수를 제공한다. 

#include <iostream>
#include <array>
#include <memory>
#include "save.h"

class Dog {
public:
	Dog() { std::cout << "Dog 생성" << '\n'; }
	~Dog() { std::cout << "Dog 소멸" << '\n'; }
};

template<class T>
class uptr {
	T* p;
public:
	uptr(T*) : p{ p } {}
	~uptr() { delete p; } // RAII
};

int main(void)
{
	std::unique_ptr<Dog> d{ new Dog };
	uptr<Dog> p{new Dog};

	save("33.cpp", "FileOutput\\2023_12_06 CPP 33-output", std::ios::app, true);
}