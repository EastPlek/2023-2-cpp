

=============================================
 Upload Time : 11/20/23 Monday 17:48:42
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 11월 15일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (12주 1일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// 사용자 정의 자료형
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"


void f(int);

void f(int n) {
	std::cout << "인자 " << n << "을 전달 받았습니다.";
}
int main(void)
{
	(*f)(3);

	save("28.cpp", "FileOutput\\2023_11_20 CPP 28-output", std::ios::app, true);
}


=============================================
 Upload Time : 11/20/23 Monday 17:49:16
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 11월 15일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (12주 1일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// 사용자 정의 자료형
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include "save.h"


void f(int);

void f(int n) {
	std::cout << "인자 " << n << "을 전달 받았습니다.";
}
int main(void)
{
	auto x = f;
	x(100);

	save("28.cpp", "FileOutput\\2023_11_20 CPP 28-output", std::ios::app, true);
}


=============================================
 Upload Time : 11/20/23 Monday 18:03:14
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 11월 15일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (12주 1일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// 사용자 정의 자료형
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include <functional>
#include "save.h"

// 호출할 수 있는 것(callable)은 함수뿐이 아니다.
// 1.함수
// 2. 함수를 가리키는 포인터
// 3. 클래스

void f(int);

void f(int n) {
	std::cout << "인자 " << n << "을 전달 받았습니다." << '\n';
}
int main(void)
{
	//int a[10];

	std::function<void(int)> x = f;
	//x.operator()(3);
	//std::cout << sizeof(x) << '\n';
	//std::cout << typeid(x).name() << '\n';
	save("28.cpp", "FileOutput\\2023_11_20 CPP 28-output", std::ios::app, true);

}



=============================================
 Upload Time : 11/20/23 Monday 18:08:14
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 11월 15일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (12주 1일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// 사용자 정의 자료형
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include <functional>
#include "save.h"

// 호출할 수 있는 것(callable)은 함수뿐이 아니다.
// 1.함수
// 2. 함수를 가리키는 포인터
// 3. 클래스

class Dog {
public:
	void operator+(int val) {

	}
	void operator()(int n) {
		std::cout << n << "을 받았다." << '\n';
	}
};
int main(void)
{
	Dog dog;
	// dog(333); // syntatic sugar
	dog.operator()(333);
	save("28.cpp", "FileOutput\\2023_11_20 CPP 28-output", std::ios::app, true);

}


=============================================
 Upload Time : 11/20/23 Monday 18:11:22
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 11월 15일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (12주 1일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// 사용자 정의 자료형
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include <functional>
#include "save.h"

// 호출할 수 있는 것(callable)은 함수뿐이 아니다.
// 1.함수
// 2. 함수를 가리키는 포인터
// 3. ()연산자를 오버로딩한 객체 = function object

// Callable type - 호출가능타입


class Dog {
public:
	void operator+(int val) {

	}
	void operator()(int n) {
		std::cout << n << "을 받았다." << '\n';
	}
};
int main(void)
{
	Dog dog;
	// dog(333); // syntatic sugar
	dog.operator()(333);
	save("28.cpp", "FileOutput\\2023_11_20 CPP 28-output", std::ios::app, true);

}


=============================================
 Upload Time : 11/20/23 Monday 18:16:02
=============================================

//-----------------------------------------------------------------------------
// 2023학년 2학기 c++ 11월 15일 | 월 | 9 ~ 10 수 |  7 ~ 8		      (12주 1일)
// 
// 2023. 12. 11 월요일 (15주 1) - 한 학기 정리, 책소개 , 종강
// 2023. 12. 13 수요일 (15주 2) - 기말 시험, 12월 18일 월요일 - 성적 게시
// 
//-----------------------------------------------------------------------------
// 사용자 정의 자료형
//-----------------------------------------------------------------------------
// 과제 - 나만의 자료형을 많이 만들어 볼 것.
//-----------------------------------------------------------------------------

#include <iostream>
#include <algorithm>
#include <functional>
#include "save.h"

// 호출할 수 있는 것(callable)은 함수뿐이 아니다.
// 1.함수
// 2. 함수를 가리키는 포인터
// 3. ()연산자를 오버로딩한 객체 = function object

// Callable type - 호출가능타입

int main(void)
{
	int a[]{ 1,3,5,7,9,2,4,6,8,10 };

	class Dog {
	public:
		int operator()(const void* a, const void* b) {
			return *(int*)a - *(int*)b;
		}
	};
	//C++에서의 정렬
	std::sort(std::begin(a), std::end(a));
	for (int i : a) {
		std::cout << i << ' ';
	}
	std::cout << '\n';
	save("28.cpp", "FileOutput\\2023_11_20 CPP 28-output", std::ios::app, true);

}
